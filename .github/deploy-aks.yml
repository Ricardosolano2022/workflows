name: Build & Deploy to AKS

on:
  push:
    branches: ["main"]

env:
  IMAGE_NAME: guestbook
  ACR_NAME: myguestbookacr18355
  ACR_LOGIN_SERVER: myguestbookacr18355.azurecr.io
  AKS_RESOURCE_GROUP: myGuestbookRG
  AKS_CLUSTER_NAME: myAKSCluster1f3285
  K8S_NAMESPACE: guestbook

jobs:
  build-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Login to ACR (Docker)
        uses: docker/login-action@v2
        with:
          registry: ${{ env.ACR_LOGIN_SERVER }}
          username: ${{ secrets.REGISTRY_USERNAME }}
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Build and push image to ACR
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:latest
            ${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Get AKS credentials
        uses: azure/CLI@v2
        with:
          azcliversion: 'latest'
          inlineScript: |
            az aks get-credentials --resource-group ${{ env.AKS_RESOURCE_GROUP }} --name ${{ env.AKS_CLUSTER_NAME }} --overwrite-existing

      - name: Update Kubernetes deployment image
        run: |
          NEW_IMAGE=${{ env.ACR_LOGIN_SERVER }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          echo "Updating deployment 'guestbook-frontend' in namespace $K8S_NAMESPACE to image $NEW_IMAGE"
          kubectl -n $K8S_NAMESPACE set image deployment/guestbook-frontend guestbook-frontend=$NEW_IMAGE --record
          kubectl -n $K8S_NAMESPACE rollout status deployment/guestbook-frontend --timeout=120s

      - name: Show deployed pods & image (sanity)
        run: |
          kubectl -n $K8S_NAMESPACE get pods -o wide
          kubectl -n $K8S_NAMESPACE get deployment guestbook-frontend -o yaml | yq '.spec.template.spec.containers[] | {name: .name, image: .image}' || true